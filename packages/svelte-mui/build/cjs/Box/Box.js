'use strict';

var index = require('../index-aad81066.js');

/* src/coffee/Box/Box.svelte generated by Svelte v3.29.4 */

function add_css() {
	var style = index.element("style");
	style.id = "svelte-1mq0jlx-style";
	style.textContent = ".root.svelte-1mq0jlx{--p:inherit;--pt:inherit;--pb:inherit;--pl:inherit;--pr:inherit;--m:inherit;--mt:inherit;--mb:inherit;--ml:inherit;--mr:inherit}.p.svelte-1mq0jlx{padding:calc(var(--theme-spacing) * var(--p))}.pt.svelte-1mq0jlx{padding-top:calc(var(--theme-spacing) * var(--pt))}.pb.svelte-1mq0jlx{padding-bottom:calc(var(--theme-spacing) * var(--pb))}.pl.svelte-1mq0jlx{padding-left:calc(var(--theme-spacing) * var(--pl))}.pr.svelte-1mq0jlx{padding-right:calc(var(--theme-spacing) * var(--pr))}.m.svelte-1mq0jlx{margin:calc(var(--theme-spacing) * var(--m))}.mt.svelte-1mq0jlx{margin-top:calc(var(--theme-spacing) * var(--mt))}.mb.svelte-1mq0jlx{margin-bottom:calc(var(--theme-spacing) * var(--mb))}.ml.svelte-1mq0jlx{margin-left:calc(var(--theme-spacing) * var(--ml))}.mr.svelte-1mq0jlx{margin-right:calc(var(--theme-spacing) * var(--mr))}";
	index.append(document.head, style);
}

function create_fragment(ctx) {
	let div;
	let div_class_value;
	let div_style_value;
	let current;
	const default_slot_template = /*#slots*/ ctx[14].default;
	const default_slot = index.create_slot(default_slot_template, ctx, /*$$scope*/ ctx[13], null);

	return {
		c() {
			div = index.element("div");
			if (default_slot) default_slot.c();
			index.attr(div, "class", div_class_value = "root " + /*classes*/ ctx[0] + (/*$$props*/ ctx[2].class || "") + " svelte-1mq0jlx");
			index.attr(div, "style", div_style_value = "" + (/*style*/ ctx[1] + (/*$$props*/ ctx[2].style || "")));
		},
		m(target, anchor) {
			index.insert(target, div, anchor);

			if (default_slot) {
				default_slot.m(div, null);
			}

			current = true;
		},
		p(ctx, [dirty]) {
			if (default_slot) {
				if (default_slot.p && dirty & /*$$scope*/ 8192) {
					index.update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[13], dirty, null, null);
				}
			}

			if (!current || dirty & /*classes, $$props*/ 5 && div_class_value !== (div_class_value = "root " + /*classes*/ ctx[0] + (/*$$props*/ ctx[2].class || "") + " svelte-1mq0jlx")) {
				index.attr(div, "class", div_class_value);
			}

			if (!current || dirty & /*style, $$props*/ 6 && div_style_value !== (div_style_value = "" + (/*style*/ ctx[1] + (/*$$props*/ ctx[2].style || "")))) {
				index.attr(div, "style", div_style_value);
			}
		},
		i(local) {
			if (current) return;
			index.transition_in(default_slot, local);
			current = true;
		},
		o(local) {
			index.transition_out(default_slot, local);
			current = false;
		},
		d(detaching) {
			if (detaching) index.detach(div);
			if (default_slot) default_slot.d(detaching);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	var classes, key, margin, padding, result, space, style, value;
	var { p = null } = $$props;
	var { pt = null } = $$props;
	var { pb = null } = $$props;
	var { pl = null } = $$props;
	var { pr = null } = $$props;
	var { m = null } = $$props;
	var { mt = null } = $$props;
	var { mb = null } = $$props;
	var { ml = null } = $$props;
	var { mr = null } = $$props;
	padding = { p, pt, pb, pl, pr };
	margin = { m, mt, mb, ml, mr };

	$$self.$$set = $$new_props => {
		$$invalidate(2, $$props = index.assign(index.assign({}, $$props), index.exclude_internal_props($$new_props)));
		if ("p" in $$new_props) $$invalidate(3, p = $$new_props.p);
		if ("pt" in $$new_props) $$invalidate(4, pt = $$new_props.pt);
		if ("pb" in $$new_props) $$invalidate(5, pb = $$new_props.pb);
		if ("pl" in $$new_props) $$invalidate(6, pl = $$new_props.pl);
		if ("pr" in $$new_props) $$invalidate(7, pr = $$new_props.pr);
		if ("m" in $$new_props) $$invalidate(8, m = $$new_props.m);
		if ("mt" in $$new_props) $$invalidate(9, mt = $$new_props.mt);
		if ("mb" in $$new_props) $$invalidate(10, mb = $$new_props.mb);
		if ("ml" in $$new_props) $$invalidate(11, ml = $$new_props.ml);
		if ("mr" in $$new_props) $$invalidate(12, mr = $$new_props.mr);
		if ("$$scope" in $$new_props) $$invalidate(13, $$scope = $$new_props.$$scope);
	};

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*padding, margin, value, result, space*/ 1015808) {
			 $$invalidate(
				1,
				{ style, classes } = (function () {
					var ref;

					// return '' unless elementStyle
					$$invalidate(17, result = { style: "", classes: "" });

					$$invalidate(18, space = "");
					ref = { ...padding, ...margin };

					for (key in ref) {
						$$invalidate(19, value = ref[key]);

						if (!value) {
							continue;
						}

						if (value) {
							$$invalidate(17, result.style += `--${key}: ${value};`, result);
							$$invalidate(17, result.classes += `${space}${key}`, result);

							if (!space) {
								$$invalidate(18, space = " ");
							}
						}
					}

					//console.log 'style', result
					return result;
				})(),
				style,
				(((((($$invalidate(0, classes), $$invalidate(16, padding)), $$invalidate(15, margin)), $$invalidate(20, key)), $$invalidate(19, value)), $$invalidate(17, result)), $$invalidate(18, space))
			);
		}
	};

	$$props = index.exclude_internal_props($$props);
	return [classes, style, $$props, p, pt, pb, pl, pr, m, mt, mb, ml, mr, $$scope, slots];
}

class Box extends index.SvelteComponent {
	constructor(options) {
		super();
		if (!document.getElementById("svelte-1mq0jlx-style")) add_css();

		index.init(this, options, instance, create_fragment, index.safe_not_equal, {
			p: 3,
			pt: 4,
			pb: 5,
			pl: 6,
			pr: 7,
			m: 8,
			mt: 9,
			mb: 10,
			ml: 11,
			mr: 12
		});
	}
}

module.exports = Box;
