/* generated by Svelte v3.29.4 */
import { create_ssr_component, escape } from "svelte/internal";

const css = {
	code: ".root.svelte-1f4eu2n{--shadow:var(--theme-shadow-0);background-color:var(--theme-palette-background-paper);color:var(--theme-palette-text-primary)\n  }.rounded.svelte-1f4eu2n{border-radius:var(--theme-shape-border-radius)\n  }.outlined.svelte-1f4eu2n{border:1px solid var(--theme-palette-divider)}.elevation.svelte-1f4eu2n{box-shadow:var(--shadow)}",
	map: "{\"version\":3,\"file\":null,\"sources\":[null],\"sourcesContent\":[\"<script>var result, style;\\n\\nexport var square = false;\\n\\nexport var elevation = 1;\\n\\nexport var variant = 'elevation';\\n\\n$:(style = (result = '', variant === 'elevation' ? result += `--shadow: var(--theme-shadows-${elevation});` : void 0, result));\\n</script>\\n\\n<style>\\n  .root {\\n    --shadow: var(--theme-shadow-0);\\n\\n    background-color: var(--theme-palette-background-paper);\\n    color: var(--theme-palette-text-primary)\\n  }\\n  .rounded {\\n    border-radius: var(--theme-shape-border-radius)\\n  }\\n  .outlined {\\n    border: 1px solid var(--theme-palette-divider);\\n  }\\n  .elevation {\\n    box-shadow: var(--shadow);\\n  }\\n</style>\\n\\n<div\\n  class:rounded={!square}\\n  class='root {variant} {$$props.class || ''}'\\n  style='{style}{$$props.style || ''}'\\n>\\n  <slot />\\n</div>\\n\"],\"names\":[],\"mappings\":\"AAYE,KAAK,eAAC,CAAC,AACL,QAAQ,CAAE,qBAAqB,CAE/B,gBAAgB,CAAE,IAAI,gCAAgC,CAAC,CACvD,KAAK,CAAE,IAAI,4BAA4B,CAAC;EAC1C,CAAC,AACD,QAAQ,eAAC,CAAC,AACR,aAAa,CAAE,IAAI,2BAA2B,CAAC;EACjD,CAAC,AACD,SAAS,eAAC,CAAC,AACT,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,uBAAuB,CAAC,AAChD,CAAC,AACD,UAAU,eAAC,CAAC,AACV,UAAU,CAAE,IAAI,QAAQ,CAAC,AAC3B,CAAC\"}"
};

const Component = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	var result, style;
	var { square = false } = $$props;
	var { elevation = 1 } = $$props;
	var { variant = "elevation" } = $$props;
	if ($$props.square === void 0 && $$bindings.square && square !== void 0) $$bindings.square(square);
	if ($$props.elevation === void 0 && $$bindings.elevation && elevation !== void 0) $$bindings.elevation(elevation);
	if ($$props.variant === void 0 && $$bindings.variant && variant !== void 0) $$bindings.variant(variant);
	$$result.css.add(css);

	style = (result = "", variant === "elevation"
	? result += `--shadow: var(--theme-shadows-${elevation});`
	: void 0, result);

	return `<div class="${[
		"root " + escape(variant) + " " + escape($$props.class || "") + " svelte-1f4eu2n",
		!square ? "rounded" : ""
	].join(" ").trim()}" style="${escape(style) + escape($$props.style || "")}">${slots.default ? slots.default({}) : ``}</div>`;
});

export default Component;