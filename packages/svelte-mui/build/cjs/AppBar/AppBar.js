'use strict';

var index = require('../index-aad81066.js');
var styles_store = require('../styles/store.js');
var Paper_Paper = require('../Paper/Paper.js');

/* src/coffee/AppBar/AppBar.svelte generated by Svelte v3.29.4 */

function add_css() {
	var style = index.element("style");
	style.id = "svelte-1qs4kul-style";
	style.textContent = ".root.svelte-1qs4kul{display:flex;flex-direction:column;width:100%;box-sizing:border-box;z-index:var(--theme-z-index-appbar);flex-shrink:0}.root.svelte-1qs4kul .position-fixed{position:fixed;top:0;left:auto;right:0}@media print{.root.svelte-1qs4kul .position-fixed{position:absolute}}.root.svelte-1qs4kul .position-absolute{position:absolute;top:0;left:auto;right:0}.root.svelte-1qs4kul .position-sticky{position:sticky;top:0;left:auto;right:0}.root.svelte-1qs4kul .position-static{position:static}.position-static.svelte-1qs4kul{position:static}.root.svelte-1qs4kul .position-relative{position:relative}.root.svelte-1qs4kul .color-primary{background-color:var(--theme-palette-primary-main);color:var(--theme-palette-primary-contrast-text)}.root.svelte-1qs4kul .color-secondary{background-color:var(--theme-palette-secondary-main);color:var(--theme-palette-secondary-contrast-text)}.root.svelte-1qs4kul .color-inherit{color:inherit}.root.svelte-1qs4kul .color-transparent{background-color:transparent;color:inherit}";
	index.append(document.head, style);
}

// (89:2) <Paper     square     elevation={1}     class="position-{position} color-{color} {$$props.class || ''}"     {style}   >
function create_default_slot(ctx) {
	let current;
	const default_slot_template = /*#slots*/ ctx[6].default;
	const default_slot = index.create_slot(default_slot_template, ctx, /*$$scope*/ ctx[7], null);

	return {
		c() {
			if (default_slot) default_slot.c();
		},
		m(target, anchor) {
			if (default_slot) {
				default_slot.m(target, anchor);
			}

			current = true;
		},
		p(ctx, dirty) {
			if (default_slot) {
				if (default_slot.p && dirty & /*$$scope*/ 128) {
					index.update_slot(default_slot, default_slot_template, ctx, /*$$scope*/ ctx[7], dirty, null, null);
				}
			}
		},
		i(local) {
			if (current) return;
			index.transition_in(default_slot, local);
			current = true;
		},
		o(local) {
			index.transition_out(default_slot, local);
			current = false;
		},
		d(detaching) {
			if (default_slot) default_slot.d(detaching);
		}
	};
}

function create_fragment(ctx) {
	let header;
	let paper;
	let current;

	paper = new Paper_Paper({
			props: {
				square: true,
				elevation: 1,
				class: "position-" + /*position*/ ctx[0] + " color-" + /*color*/ ctx[1] + " " + (/*$$props*/ ctx[5].class || ""),
				style: /*style*/ ctx[4],
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			}
		});

	let header_levels = [{ class: "root" }, { style: /*headerStyle*/ ctx[2] }, /*restProps*/ ctx[3]];
	let header_data = {};

	for (let i = 0; i < header_levels.length; i += 1) {
		header_data = index.assign(header_data, header_levels[i]);
	}

	return {
		c() {
			header = index.element("header");
			index.create_component(paper.$$.fragment);
			index.set_attributes(header, header_data);
			index.toggle_class(header, "svelte-1qs4kul", true);
		},
		m(target, anchor) {
			index.insert(target, header, anchor);
			index.mount_component(paper, header, null);
			current = true;
		},
		p(ctx, [dirty]) {
			const paper_changes = {};
			if (dirty & /*position, color, $$props*/ 35) paper_changes.class = "position-" + /*position*/ ctx[0] + " color-" + /*color*/ ctx[1] + " " + (/*$$props*/ ctx[5].class || "");
			if (dirty & /*style*/ 16) paper_changes.style = /*style*/ ctx[4];

			if (dirty & /*$$scope*/ 128) {
				paper_changes.$$scope = { dirty, ctx };
			}

			paper.$set(paper_changes);

			index.set_attributes(header, header_data = index.get_spread_update(header_levels, [
				{ class: "root" },
				(!current || dirty & /*headerStyle*/ 4) && { style: /*headerStyle*/ ctx[2] },
				dirty & /*restProps*/ 8 && /*restProps*/ ctx[3]
			]));

			index.toggle_class(header, "svelte-1qs4kul", true);
		},
		i(local) {
			if (current) return;
			index.transition_in(paper.$$.fragment, local);
			current = true;
		},
		o(local) {
			index.transition_out(paper.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) index.detach(header);
			index.destroy_component(paper);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let $currentTheme;
	index.component_subscribe($$self, styles_store.currentTheme, $$value => $$invalidate(12, $currentTheme = $$value));
	let { $$slots: slots = {}, $$scope } = $$props;
	var _className, props, ref, restProps, result, style;
	var { position = "static" } = $$props;
	var { color = "default" } = $$props;
	var { headerStyle = "" } = $$props;

	$$self.$$set = $$new_props => {
		$$invalidate(5, $$props = index.assign(index.assign({}, $$props), index.exclude_internal_props($$new_props)));
		if ("position" in $$new_props) $$invalidate(0, position = $$new_props.position);
		if ("color" in $$new_props) $$invalidate(1, color = $$new_props.color);
		if ("headerStyle" in $$new_props) $$invalidate(2, headerStyle = $$new_props.headerStyle);
		if ("$$scope" in $$new_props) $$invalidate(7, $$scope = $$new_props.$$scope);
	};

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*color, $currentTheme, result*/ 6146) {
			 $$invalidate(4, style = ($$invalidate(11, result = ""), color === "default"
			? $currentTheme === "light"
				? $$invalidate(11, result += "background-color: var(--theme-colors-grey-100);")
				: $$invalidate(11, result += "background-color: var(--theme-colors-grey-900);")
			: void 0, result));
		}

		 _className = `root position-${position} color-${color} ${$$invalidate(10, ref = $$props.class) != null ? ref : ""}`;
		 $$invalidate(3, restProps = ($$invalidate(9, props = { ...$$props }), delete props["class"], props));
	};

	$$props = index.exclude_internal_props($$props);
	return [position, color, headerStyle, restProps, style, $$props, slots, $$scope];
}

class AppBar extends index.SvelteComponent {
	constructor(options) {
		super();
		if (!document.getElementById("svelte-1qs4kul-style")) add_css();
		index.init(this, options, instance, create_fragment, index.safe_not_equal, { position: 0, color: 1, headerStyle: 2 });
	}
}

module.exports = AppBar;
