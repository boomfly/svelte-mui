/* generated by Svelte v3.29.4 */
import { create_ssr_component, escape } from "svelte/internal";

import { onMount } from "svelte";

const css = {
	code: ".container.svelte-vy4b7z{--margin:calc(var(--theme-spacing, 0) * var(--spacing, 0));box-sizing:border-box;display:inline-flex;flex-wrap:wrap;width:calc(100% + var(--margin));margin:calc(-1 * var(--margin)) 0 0 calc(-1 * var(--margin))}.item.svelte-vy4b7z{--size:0;--grow:1;--max:none;--width:calc(var(--size) / 12 * 100%);flex-basis:calc(var(--width) - calc(var(--margin)));flex-grow:var(--grow);max-width:var(--max);margin:var(--margin) 0 0 var(--margin);box-sizing:border-box;flex-shrink:1}.zeroMinWidth.svelte-vy4b7z{min-width:0}@media(max-width: 600px){.root.item.svelte-vy4b7z{--size:var(--size-xs, 0);--grow:var(--grow-xs, 0);--max:var(--max-xs, none)}}@media(min-width: 600px){.root.item.svelte-vy4b7z{--size:var(--size-sm, 0);--grow:var(--grow-sm, 0);--max:var(--max-sm, none)}}@media(min-width: 960px) and (max-width: 1280px){.root.item.svelte-vy4b7z{--size:var(--size-md, 0);--grow:var(--grow-md, 0);--max:var(--max-md, none)}}@media(min-width: 1280px) and (max-width: 1920px){.root.item.svelte-vy4b7z{--size:var(--size-lg, 0);--grow:var(--grow-lg, 0);--max:var(--max-lg, none)}}@media(min-width: 1920px){.root.item.svelte-vy4b7z{--size:var(--size-xl, 0);--grow:var(--grow-xl, 0);--max:var(--max-xl, none)}}",
	map: "{\"version\":3,\"file\":null,\"sources\":[null],\"sourcesContent\":[\"<script>var key, lastValue, result, sizes, style, value;\\n\\nimport {\\n  onMount\\n} from 'svelte';\\n\\nexport var container = false;\\n\\nexport var item = false;\\n\\nexport var zeroMinWidth = false;\\n\\nexport var xs = false;\\n\\nexport var sm = false;\\n\\nexport var md = false;\\n\\nexport var lg = false;\\n\\nexport var xl = false;\\n\\nexport var spacing = 0;\\n\\nsizes = {xs, sm, md, lg, xl};\\n\\n$:(style = ((function() {\\n  // return '' unless elementStyle\\n  result = '';\\n  if (item) {\\n    lastValue = null;\\n    for (key in sizes) {\\n      value = sizes[key];\\n      if (!value) {\\n        // continue\\n        if (!lastValue) {\\n          continue;\\n        }\\n        value = lastValue;\\n      }\\n      if (value === true) {\\n        result += `--size-${key}: 0; --grow-${key}: 1; --max-${key}: 100%;`;\\n      } else if (value === 'auto') {\\n        result += `--size-${key}: auto; --max-${key}: auto;`;\\n      } else {\\n        result += `--size-${key}: ${value}; --max-${key}: none;`;\\n      }\\n      lastValue = value;\\n    }\\n  }\\n  if (container) {\\n    result += `--spacing: ${spacing};`;\\n  }\\n  //console.log 'style', result\\n  return result;\\n})()));\\n</script>\\n\\n<style>\\n  /* .root {\\n    \\n  } */\\n  .container {\\n    --margin: calc(var(--theme-spacing, 0) * var(--spacing, 0));\\n\\n    box-sizing: border-box;\\n    display: inline-flex;\\n    flex-wrap: wrap;\\n    width: calc(100% + var(--margin));\\n    margin: calc(-1 * var(--margin)) 0 0 calc(-1 * var(--margin));\\n  }\\n  .item {\\n    --size: 0;\\n    --grow: 1;\\n    --max: none;\\n    --width: calc(var(--size) / 12 * 100%);\\n\\n    flex-basis: calc(var(--width) - calc(var(--margin)));\\n    flex-grow: var(--grow);\\n    max-width: var(--max);\\n    margin: var(--margin) 0 0 var(--margin);\\n\\n    box-sizing: border-box;\\n    flex-shrink: 1;\\n  }\\n  .zeroMinWidth {\\n    min-width: 0;\\n  }\\n\\n  /* xs */\\n  @media (max-width: 600px) {\\n    .root.item {\\n      --size: var(--size-xs, 0);\\n      --grow: var(--grow-xs, 0);\\n      --max: var(--max-xs, none);\\n    }\\n  }\\n\\n  /* sm */\\n  /* @media (min-width: 600px) and (max-width: 960px) {\\n    .root {\\n      --size: var(--size-sm, 0);\\n    }\\n  } */\\n  @media (min-width: 600px) {\\n    .root.item {\\n      --size: var(--size-sm, 0);\\n      --grow: var(--grow-sm, 0);\\n      --max: var(--max-sm, none);\\n    }\\n  }\\n\\n  /* md */\\n  @media (min-width: 960px) and (max-width: 1280px) {\\n    .root.item {\\n      --size: var(--size-md, 0);\\n      --grow: var(--grow-md, 0);\\n      --max: var(--max-md, none);\\n    }\\n  }\\n\\n  /* lg */\\n  @media (min-width: 1280px) and (max-width: 1920px) {\\n    .root.item {\\n      --size: var(--size-lg, 0);\\n      --grow: var(--grow-lg, 0);\\n      --max: var(--max-lg, none);\\n    }\\n  }\\n\\n  /* xl */\\n  @media (min-width: 1920px) {\\n    .root.item {\\n      --size: var(--size-xl, 0);\\n      --grow: var(--grow-xl, 0);\\n      --max: var(--max-xl, none);\\n    }\\n  }\\n</style>\\n\\n<div\\n  class:container\\n  class:item\\n  class:zeroMinWidth\\n  class=\\\"root {$$props.class || ''}\\\"\\n  style=\\\"{style} {$$props.style || ''}\\\"\\n>\\n  <slot />\\n</div>\\n\"],\"names\":[],\"mappings\":\"AA8DE,UAAU,cAAC,CAAC,AACV,QAAQ,CAAE,iDAAiD,CAE3D,UAAU,CAAE,UAAU,CACtB,OAAO,CAAE,WAAW,CACpB,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CACjC,MAAM,CAAE,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,AAC/D,CAAC,AACD,KAAK,cAAC,CAAC,AACL,MAAM,CAAE,CAAC,CACT,MAAM,CAAE,CAAC,CACT,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,6BAA6B,CAEtC,UAAU,CAAE,KAAK,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,QAAQ,CAAC,CAAC,CAAC,CACpD,SAAS,CAAE,IAAI,MAAM,CAAC,CACtB,SAAS,CAAE,IAAI,KAAK,CAAC,CACrB,MAAM,CAAE,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAEvC,UAAU,CAAE,UAAU,CACtB,WAAW,CAAE,CAAC,AAChB,CAAC,AACD,aAAa,cAAC,CAAC,AACb,SAAS,CAAE,CAAC,AACd,CAAC,AAGD,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,KAAK,KAAK,cAAC,CAAC,AACV,MAAM,CAAE,iBAAiB,CACzB,MAAM,CAAE,iBAAiB,CACzB,KAAK,CAAE,mBAAmB,AAC5B,CAAC,AACH,CAAC,AAQD,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,KAAK,KAAK,cAAC,CAAC,AACV,MAAM,CAAE,iBAAiB,CACzB,MAAM,CAAE,iBAAiB,CACzB,KAAK,CAAE,mBAAmB,AAC5B,CAAC,AACH,CAAC,AAGD,MAAM,AAAC,YAAY,KAAK,CAAC,CAAC,GAAG,CAAC,YAAY,MAAM,CAAC,AAAC,CAAC,AACjD,KAAK,KAAK,cAAC,CAAC,AACV,MAAM,CAAE,iBAAiB,CACzB,MAAM,CAAE,iBAAiB,CACzB,KAAK,CAAE,mBAAmB,AAC5B,CAAC,AACH,CAAC,AAGD,MAAM,AAAC,YAAY,MAAM,CAAC,CAAC,GAAG,CAAC,YAAY,MAAM,CAAC,AAAC,CAAC,AAClD,KAAK,KAAK,cAAC,CAAC,AACV,MAAM,CAAE,iBAAiB,CACzB,MAAM,CAAE,iBAAiB,CACzB,KAAK,CAAE,mBAAmB,AAC5B,CAAC,AACH,CAAC,AAGD,MAAM,AAAC,YAAY,MAAM,CAAC,AAAC,CAAC,AAC1B,KAAK,KAAK,cAAC,CAAC,AACV,MAAM,CAAE,iBAAiB,CACzB,MAAM,CAAE,iBAAiB,CACzB,KAAK,CAAE,mBAAmB,AAC5B,CAAC,AACH,CAAC\"}"
};

const Component = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	var key, lastValue, result, sizes, style, value;
	var { container = false } = $$props;
	var { item = false } = $$props;
	var { zeroMinWidth = false } = $$props;
	var { xs = false } = $$props;
	var { sm = false } = $$props;
	var { md = false } = $$props;
	var { lg = false } = $$props;
	var { xl = false } = $$props;
	var { spacing = 0 } = $$props;
	sizes = { xs, sm, md, lg, xl };
	if ($$props.container === void 0 && $$bindings.container && container !== void 0) $$bindings.container(container);
	if ($$props.item === void 0 && $$bindings.item && item !== void 0) $$bindings.item(item);
	if ($$props.zeroMinWidth === void 0 && $$bindings.zeroMinWidth && zeroMinWidth !== void 0) $$bindings.zeroMinWidth(zeroMinWidth);
	if ($$props.xs === void 0 && $$bindings.xs && xs !== void 0) $$bindings.xs(xs);
	if ($$props.sm === void 0 && $$bindings.sm && sm !== void 0) $$bindings.sm(sm);
	if ($$props.md === void 0 && $$bindings.md && md !== void 0) $$bindings.md(md);
	if ($$props.lg === void 0 && $$bindings.lg && lg !== void 0) $$bindings.lg(lg);
	if ($$props.xl === void 0 && $$bindings.xl && xl !== void 0) $$bindings.xl(xl);
	if ($$props.spacing === void 0 && $$bindings.spacing && spacing !== void 0) $$bindings.spacing(spacing);
	$$result.css.add(css);

	style = (function () {
		// return '' unless elementStyle
		result = "";

		if (item) {
			lastValue = null;

			for (key in sizes) {
				value = sizes[key];

				if (!value) {
					// continue
					if (!lastValue) {
						continue;
					}

					value = lastValue;
				}

				if (value === true) {
					result += `--size-${key}: 0; --grow-${key}: 1; --max-${key}: 100%;`;
				} else if (value === "auto") {
					result += `--size-${key}: auto; --max-${key}: auto;`;
				} else {
					result += `--size-${key}: ${value}; --max-${key}: none;`;
				}

				lastValue = value;
			}
		}

		if (container) {
			result += `--spacing: ${spacing};`;
		}

		//console.log 'style', result
		return result;
	})();

	return `<div class="${[
		"root " + escape($$props.class || "") + " svelte-vy4b7z",
		(container ? "container" : "") + " " + (item ? "item" : "") + " " + (zeroMinWidth ? "zeroMinWidth" : "")
	].join(" ").trim()}" style="${escape(style) + " " + escape($$props.style || "")}">${slots.default ? slots.default({}) : ``}</div>`;
});

export default Component;